{
  "swagger": "2.0",
  "info": {
    "description": "This is the SmartCity api documentation.",
    "version": "0.1",
    "title": "SmartCity REST API",
    "contact": {
      "email": "smartcity@info.unamur.be"
    }
  },
  "host": "192.168.3.1:8080",
  "basePath": "/api",
  "tags": [
    {
      "name": "zones",
      "description": "Everything about your zones"
    },
    {
      "name": "sensors",
      "description": "Access to SmartCity sensors"
    }
  ],
  "paths": {
    "/zones/{name}/close": {
      "post": {
        "tags": [
          "zones"
        ],
        "summary": "Close a specific zone",
        "description": "",
        "operationId": "closeZone",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name of the zone",
            "required": true,
            "type": "string"
          },
          {
            "name": "full_name",
            "in": "formData",
            "description": "The full name of the zone",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Zone"
            }
          }
        }
      }
    },
    "/zones/{name}/open": {
      "post": {
        "tags": [
          "zones"
        ],
        "summary": "Open a specific zone",
        "description": "",
        "operationId": "openZone",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name of the zone",
            "required": true,
            "type": "string"
          },
          {
            "name": "full_name",
            "in": "formData",
            "description": "The full name of the zone",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Zone"
            }
          }
        }
      }
    },
    "/zones/closed": {
      "get": {
        "tags": [
          "zones"
        ],
        "summary": "Get the closed zones",
        "description": "",
        "operationId": "getClosedZones",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ZonesName"
            }
          }
        }
      }
    },
    "/sensors": {
      "post": {
        "tags": [
          "sensors"
        ],
        "summary": "Add a new sensor with its value and its gross value",
        "operationId": "addNewSensorValueGrossValue",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "The name of the sensor",
            "required": true,
            "type": "string"
          },
          {
            "name": "value",
            "in": "formData",
            "description": "The value of the sensor (in the conventional unit, for example Celsius degree for a temperature sensor)",
            "required": true,
            "type": "number"
          },
          {
            "name": "gross_value",
            "in": "formData",
            "description": "The gross value of the sensor (as it was taken, with no conversion whatsoever)",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Sensor"
            }
          },
          "400": {
            "description": "One (or more) parameter(s) is (are) missing",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sensors/{name}": {
      "get": {
        "tags": [
          "sensors"
        ],
        "summary": "Get the sensor last value",
        "description": "",
        "operationId": "getLastSensor",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name of the sensor",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Sensor"
            }
          },
          "400": {
            "description": "Sensor not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sensors/all/{name}": {
      "get": {
        "tags": [
          "sensors"
        ],
        "summary": "Get history of sensors",
        "description": "",
        "operationId": "getLastSensor",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name of the sensor",
            "required": true,
            "type": "string"
          },
          {
            "name": "time",
            "in": "query",
            "description": "The time for which you want history (\"hour\", \"day\", \"month\" or \"all\")",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Sensor"
            }
          },
          "400": {
            "description": "Sensor not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Zone": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "format": "string"
        },
        "opened": {
          "type": "boolean",
          "format": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Sensor": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "format": "string"
        },
        "value": {
          "type": "number",
          "format": "double"
        },
        "grossValue": {
          "type": "number",
          "format": "double"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ZonesName": {
      "type": "object",
      "properties": {
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "format": "string"
        }
      }
    }
  }
}